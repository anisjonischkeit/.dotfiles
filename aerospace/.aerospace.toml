# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalisations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'accordion'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = 'move-mouse window-lazy-center'

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 0 #5
inner.vertical = 0   #5
outer.left = 0       #5
outer.bottom = 0     #5
outer.top = 0        #5
outer.right = 0      #5

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'

alt-a = 'workspace A'                           # In your config, you can drop workspace bindings that you don't need
alt-shift-a = 'move-node-to-workspace A'
alt-b = 'workspace Browser'
alt-shift-b = 'move-node-to-workspace Browser'
alt-c = 'workspace Chats'
alt-shift-c = 'move-node-to-workspace Chats'
alt-d = 'workspace D'
alt-shift-d = 'move-node-to-workspace D'
alt-e = 'workspace E'
alt-shift-e = 'move-node-to-workspace E'
alt-f = 'workspace Finder'
alt-shift-f = 'move-node-to-workspace Finder'
alt-g = 'workspace G'
alt-shift-g = 'move-node-to-workspace G'
alt-i = 'workspace I'
alt-shift-i = 'move-node-to-workspace I'
alt-m = 'workspace Meetings'
alt-shift-m = 'move-node-to-workspace Meetings'
alt-n = 'workspace Notes'
alt-shift-n = 'move-node-to-workspace N'
alt-o = 'workspace O'
alt-shift-o = 'move-node-to-workspace O'
alt-p = 'workspace P'
alt-shift-p = 'move-node-to-workspace P'
# alt-q = 'workspace Q' #clashes with vim quickfix
# alt-shift-q = 'move-node-to-workspace Q'
alt-r = 'workspace R'
alt-shift-r = 'move-node-to-workspace R'
alt-s = 'workspace Slack'
alt-shift-s = 'move-node-to-workspace Slack'
alt-t = 'workspace Terminal'
alt-shift-t = 'move-node-to-workspace Terminal'
alt-u = 'workspace U'
alt-shift-u = 'move-node-to-workspace U'
alt-v = 'workspace V'
alt-shift-v = 'move-node-to-workspace V'
alt-w = 'workspace W'
alt-shift-w = 'move-node-to-workspace W'
alt-x = 'workspace Xcode'
alt-shift-x = 'move-node-to-workspace Xcode'
alt-y = 'workspace Y'
alt-shift-y = 'move-node-to-workspace Y'
alt-z = 'workspace Z'
alt-shift-z = 'move-node-to-workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
alt-shift-5 = 'move-node-to-workspace 5'
alt-shift-6 = 'move-node-to-workspace 6'
alt-shift-7 = 'move-node-to-workspace 7'
alt-shift-8 = 'move-node-to-workspace 8'
alt-shift-9 = 'move-node-to-workspace 9'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'
ctrl-b = 'mode tmux_passthrough_mode'
# ctrl-b = 'exec-and-forget switch-to-tmux-passthrough-mode.sh'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# Sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# USE `aerospace list-apps` to see the app-ids of all running apps
[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = 'move-node-to-workspace Browser'

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = 'move-node-to-workspace Browser'

[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
run = 'move-node-to-workspace Browser'

[[on-window-detected]]
if.app-id = 'com.vivaldi.Vivaldi'
run = 'move-node-to-workspace Browser'

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['layout floating', 'move-node-to-workspace Finder']

[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = 'move-node-to-workspace Meetings'

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = 'move-node-to-workspace Notes'

[[on-window-detected]]
if.app-id = 'com.kovidgoyal.kitty'
run = 'move-node-to-workspace Terminal'

[[on-window-detected]]
if.app-id = 'com.apple.dt.Xcode'
run = 'move-node-to-workspace Xcode'

# Floating Unbound Windows
[[on-window-detected]]
if.app-id = 'org.chromium.Chromium'
run = 'layout floating'

[mode.tmux_passthrough_mode.binding]
1 = ["exec-and-forget ~/.dotfiles/.extras/aerospace/aerospace_tmux_bridge.sh 1"]
2 = ["exec-and-forget ~/.dotfiles/.extras/aerospace/aerospace_tmux_bridge.sh 2"]
#3 = ["exec-and-forget aerospace_tmux_bridge.sh 3"]
#4 = ["exec-and-forget aerospace_tmux_bridge.sh 4"]
#5 = ["exec-and-forget aerospace_tmux_bridge.sh 5"]
#6 = ["exec-and-forget aerospace_tmux_bridge.sh 6"]
#7 = ["exec-and-forget aerospace_tmux_bridge.sh 7"]
#8 = ["exec-and-forget aerospace_tmux_bridge.sh 8"]
#9 = ["exec-and-forget aerospace_tmux_bridge.sh 9"]
#0 = ["exec-and-forget aerospace_tmux_bridge.sh 0"]
#
#q = ["exec-and-forget aerospace_tmux_bridge.sh q", "mode main"]
#w = ["exec-and-forget aerospace_tmux_bridge.sh w", "mode main"]
#e = ["exec-and-forget aerospace_tmux_bridge.sh e", "mode main"]
#r = ["exec-and-forget aerospace_tmux_bridge.sh r", "mode main"]
#t = ["exec-and-forget aerospace_tmux_bridge.sh t", "mode main"]
#y = ["exec-and-forget aerospace_tmux_bridge.sh y", "mode main"]
#u = ["exec-and-forget aerospace_tmux_bridge.sh u", "mode main"]
#i = ["exec-and-forget aerospace_tmux_bridge.sh i", "mode main"]
#o = ["exec-and-forget aerospace_tmux_bridge.sh o", "mode main"]
#p = ["exec-and-forget aerospace_tmux_bridge.sh p", "mode main"]
#a = ["exec-and-forget aerospace_tmux_bridge.sh a", "mode main"]
#s = ["exec-and-forget aerospace_tmux_bridge.sh s", "mode main"]
#d = ["exec-and-forget aerospace_tmux_bridge.sh d", "mode main"]
#f = ["exec-and-forget aerospace_tmux_bridge.sh f", "mode main"]
#g = ["exec-and-forget aerospace_tmux_bridge.sh g", "mode main"]
#h = ["exec-and-forget aerospace_tmux_bridge.sh h", "mode main"]
#j = ["exec-and-forget aerospace_tmux_bridge.sh j", "mode main"]
#k = ["exec-and-forget aerospace_tmux_bridge.sh k", "mode main"]
#l = ["exec-and-forget aerospace_tmux_bridge.sh l", "mode main"]
#z = ["exec-and-forget aerospace_tmux_bridge.sh z", "mode main"]
#x = ["exec-and-forget aerospace_tmux_bridge.sh x", "mode main"]
#c = ["exec-and-forget aerospace_tmux_bridge.sh c", "mode main"]
#v = ["exec-and-forget aerospace_tmux_bridge.sh v", "mode main"]
## b = "exec-and-forget aerospace_tmux_bridge.sh b"
#n = ["exec-and-forget aerospace_tmux_bridge.sh n", "mode main"]
#m = ["exec-and-forget aerospace_tmux_bridge.sh m", "mode main"]
#
## Special characters for tmux (e.g., pane splitting, window commands)
## Quote them as needed for TOML and shell.
## The script receives them as a string. AppleScript's `keystroke` handles most.
## '%' might need to be `\"%\"` if it has shell meaning not intended.
## For TOML, literal strings might be easier for some: '"' = '...'
## Or ensure the script handles argument passing robustly.
## Simple characters are usually fine.
##percent = "exec-and-forget /usr/local/bin/aerospace_tmux_bridge.sh \"%\""        # For '%' (split pane)
#quote = [
#  "exec-and-forget aerospace_tmux_bridge.sh \\\"",
#  "mode main",
#] # For '"' (split pane) - escaped for TOML string then shell
#leftSquareBracket = ["exec-and-forget aerospace_tmux_bridge.sh [", "mode main"]
#rightSquareBracket = ["exec-and-forget aerospace_tmux_bridge.sh ]", "mode main"]
## Add other keys like 'pageUp', 'pageDown', arrow keys if you use them with ctrl-b

esc = 'mode main' # Pressing Esc will return to the main mode
# You could also bind ctrl-g (a common "cancel" in Emacs/tmux contexts)
ctrl-g = 'mode main'
